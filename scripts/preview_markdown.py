#!/usr/bin/env python3
"""
Simple Markdown-to-HTML preview generator.
Usage: python scripts/preview_markdown.py path/to/file.md
Produces: preview_<filename>.html in the current working directory.

This script depends on the `markdown` package. If you don't have it installed, run:
    pip install markdown

You can then serve the generated HTML with:
    python -m http.server
and open http://localhost:8000/preview_<filename>.html in your browser.
"""
import sys
from pathlib import Path

try:
    import markdown
except Exception:
    print("The 'markdown' package is required. Install with: pip install markdown")
    sys.exit(2)

TEMPLATE = """<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width,initial-scale=1">
  <title>{{title}}</title>
  <style>
    body {{ font-family: system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial; max-width: 900px; margin: 3rem auto; padding: 0 1rem; line-height:1.6; }}
    pre {{ background:#f6f8fa; padding:1rem; overflow:auto }}
    code {{ background:#f6f8fa; padding:0.1rem 0.3rem; }}
    img {{ max-width:100%; height:auto }}
    h1,h2,h3 {{ margin-top:1.4rem }}
    .meta {{ color: #6a737d; font-size: .95rem }}
  </style>
</head>
<body>
<div class="meta">Preview generated by scripts/preview_markdown.py</div>
{{content}}
</body>
</html>
"""


def main():
    if len(sys.argv) < 2:
        print("Usage: python scripts/preview_markdown.py path/to/file.md")
        sys.exit(1)

    md_path = Path(sys.argv[1])
    if not md_path.exists():
        print(f"File not found: {md_path}")
        sys.exit(1)

    text = md_path.read_text(encoding="utf-8")
    html_body = markdown.markdown(text, extensions=["fenced_code", "codehilite", "tables", "toc"])
    title = md_path.stem
    out_name = f"preview_{md_path.stem}.html"
    out_path = Path.cwd() / out_name
    out_path.write_text(TEMPLATE.replace("{{title}}", title).replace("{{content}}", html_body), encoding="utf-8")
    print(f"Wrote preview HTML to: {out_path.resolve()}")
    print("You can serve it with: python -m http.server")


if __name__ == '__main__':
    main()
